[tool.poetry]
name = "PlaylistGenerator"
version = "0.1.0"
description = "Generates a recommended playlist using ML, NLP and RL!"
authors = ["Placeholder <test@northeastern.edu>"]

[tool.poetry.dependencies]
python = "^3.9.16"
imageio = "^2.4.0"
importnb = "^2023.11.1"
black = "^24.4.2"
pydoclint = "^0.5.3"
ruff = "^0.5.0"
mypy = "^1.10.1"
pyvirtualdisplay = "^3.0"
pyglet = "^2.0.15"
tf-keras = "^2.16.0"
tf-agents = "^0.19.0"
matplotlib = "^3.9.1"
isort = "^5.13.2"
networkx = "^3.0"
scipy = "^1.11.4"
beautifulsoup4 = "^4.12.3"
nltk = "^3.9.1"
pandas = "^2.2.3"
numpy = "^1.18.5"
scikit-learn = "^1.5.2"
gensim = "^4.3.3"
textblob = "^0.18.0.post0"
requests = "^2.32.3"
spotipy = "^2.24.0"
streamlit = "^1.40.1"


[tool.black]
line-length = 88
target-version = ['py38']

[tool.ruff]
line-length = 88
select = ["E", "F", "W", "I", "B"]
ignore = ["E501"]

[tool.pydoclint]
ignore = []

[tool.mypy]
python_version = "3.9.16"
warn_unused_configs = true

[tool.isort]
profile = "black"
force_sort_within_sections = true
sections = ["FUTURE", "STDLIB", "INBETWEENS", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"
known_first_party = ["fault_recovery_pipeline"]
forced_separate = ["tests"]
combine_as_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"